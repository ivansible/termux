---
provisioner:
  name: ansible
  inventory:
    links:
      hosts: settings/$PLAYBOOK.yml
  playbooks:
    prepare: prepare/$PLAYBOOK.yml
    converge: converge/$PLAYBOOK.yml
    verify: verify/$PLAYBOOK.yml
  env:
    ANSIBLE_CALLBACK_PLUGINS: $MOLECULE_PROJECT_DIRECTORY/plugins/callback
    ANSIBLE_STRATEGY_PLUGINS: $HOME/.ansible/venv/site-packages/ansible_mitogen/plugins/strategy
  config_options:
    defaults:
      strategy: ${ANSIBLE_STRATEGY:-mitogen_linear}
      stdout_callback: ${ANSIBLE_STDOUT_CALLBACK:-unixy2}
      verbosity: 1
dependency:
  name: galaxy
  options:
    role-file: molecule/default/requirements.yml
lint: |
  ansible-lint
scenario:
  test_sequence:
    - dependency
    - syntax
    - lint
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - destroy
  create_sequence:
    - create
    # prepare
  destroy_sequence:
    - destroy
    # cleanup
  converge_sequence:
    - converge
verifier:
  name: ansible
driver:
  name: docker
platforms:
  - name: termux.$PLAYBOOK
    groups:
      - docker_molecule
    ## set DOCKER_TERMUX_ARCH=aarch64 on arm64 hosts
    image: kcubeterm/termux:${DOCKER_TERMUX_ARCH:-x86_64}
    ## override the default cmd script which would exit without terminal
    command: sleep infinity
    ## publish sshd port for termux to test locally
    published_ports:
      - 127.0.0.1:55022:55022/tcp
    # volumes:
    #   - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
...
