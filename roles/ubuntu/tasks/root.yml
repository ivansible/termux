---
- name: install core packages (long task)
  ansible.builtin.apt:
    name: "{{ termuntu_core_packages }}"
    state: present

- name: set system locale
  ## localectl fails because dbus is non-functional
  ansible.builtin.lineinfile:
    path: /etc/default/locale
    regexp: "^{{ item }}="
    line: "{{ item }}={{ termuntu_system_locale }}"
    create: true
    mode: 0644
  loop: [LANG, LANGUAGE]
  when: termuntu_system_locale |default('')

- name: set system locale on trusty
  ansible.builtin.lineinfile:
    path: /etc/profile.d/locale.sh
    regexp: "^{{ item }}="
    line: "{{ item }}={{ termuntu_system_locale }}"
    create: true
    mode: 0644
  loop: [LANG, LANGUAGE]
  when:
    - termuntu_system_locale |default('')
    - ansible_lsb.codename == 'trusty'

- name: set timezone
  ## avoid timezone module warning about failing timedatectl
  block:
    - name: configure system timezone
      ansible.builtin.copy:
        dest: /etc/timezone
        content: |
          {{ termuntu_timezone }}
        force: false
        mode: 0644

    - name: setup timezone data
      ansible.builtin.file:
        state: link
        force: true
        dest: /etc/localtime
        src: /usr/share/zoneinfo/{{ termuntu_timezone }}
  when: termuntu_timezone |default('')

- name: set hostname
  block:
    - name: set system hostname
      ansible.builtin.copy:
        dest: /etc/hostname
        content: |
          {{ termuntu_hostname }}
        force: false
        mode: 0644

    - name: configure loopback address for hostname
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 {{ termuntu_hostname }}"
  when: termuntu_hostname |default('')

- name: give names to android groups
  block:
    - name: get all user groups
      ansible.builtin.command: id -G
      changed_when: false
      register: _user_gids

    - name: get all system groups
      ansible.builtin.getent:
        database: group

    - name: add absent groups
      ansible.builtin.group:
        name: "grp{{ item }}"
        gid: "{{ item }}"
      loop: "{{ user_gids |difference(sys_gids) }}"
      vars:
        user_gids: "{{ _user_gids.stdout.split() }}"
        sys_gids: "{{ getent_group |json_query('values(@)|[*][1]') }}"
  when: termuntu_name_android_groups |bool

- name: disable telemetry on bionic+
  ansible.builtin.import_role:
    name: ivansible.linux.core
    tasks_from: telemetry.yml
  when: ansible_lsb.release is version('18.04','>=')
...
